apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: alloy
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: alloy
      version: "1.0.2"
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
      interval: 15m

  dependsOn:
    - name: loki
      namespace: monitoring

  values:
    alloy:
      configMap:
        create: true
        content: |
          logging {
            level  = "info"
            format = "logfmt"
          }
          
          // Discover all pods in the cluster
          discovery.kubernetes "pods" {
            role = "pod"
          }
          
          // Add labels from Kubernetes metadata
          discovery.relabel "kubernetes_pods" {
            targets = discovery.kubernetes.pods.targets
          
            // Add namespace label
            rule {
              source_labels = ["__meta_kubernetes_namespace"]
              target_label  = "namespace"
            }
          
            // Add pod name
            rule {
              source_labels = ["__meta_kubernetes_pod_name"]
              target_label  = "pod"
            }
          
            // Add container name
            rule {
              source_labels = ["__meta_kubernetes_pod_container_name"]
              target_label  = "container"
            }
          
            // Add node name
            rule {
              source_labels = ["__meta_kubernetes_pod_node_name"]
              target_label  = "node"
            }
          }
          
          // Scrape logs from Kubernetes pods
          loki.source.kubernetes "pods" {
            targets    = discovery.relabel.kubernetes_pods.output
            forward_to = [loki.process.add_labels.receiver]
          }
          
          // Add custom labels
          loki.process "add_labels" {
            forward_to = [loki.write.default.receiver]
          
            stage.static_labels {
              values = {
                cluster = "homelab",
              }
            }
          }
          
          // Send logs to Loki
          loki.write "default" {
            endpoint {
              url = "http://loki-gateway.monitoring.svc.cluster.local/loki/api/v1/push"
            }
          }

      # Enable volume mounts for log access
      mounts:
        varlog: true

    controller:
      type: 'daemonset'

      # Tolerations to run on all nodes including control plane
      tolerations:
        - effect: NoSchedule
          operator: Exists

    rbac:
      create: true

    serviceAccount:
      create: true