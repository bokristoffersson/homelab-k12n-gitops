---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: pulsar
  namespace: pulsar
spec:
  interval: 30m
  chart:
    spec:
      chart: pulsar
      version: '3.4.x'  # Use latest 3.4.x version
      sourceRef:
        kind: HelmRepository
        name: apache-pulsar
        namespace: pulsar
      interval: 12h

  # Uncomment to auto-upgrade to latest patch version
  # upgrade:
  #   remediation:
  #     retries: 3

  values:
    # Initialize the cluster (first time setup)
    initialize: true

    # Node affinity - pin to worker-pi5
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - worker-pi5
      antiAffinity: false

    # Enable components for IoT/MQTT use case
    components:
      # Core components
      zookeeper: true
      bookkeeper: true
      broker: true
      proxy: true

      # Autorecovery for bookkeeper
      autorecovery: true

      # Toolset for admin commands
      toolset: true

      # Functions for stream processing (disabled to save resources)
      functions: false

      # DISABLE all monitoring components
      pulsar_manager: false
      grafana: false
      prometheus: false
      kube_prometheus_stack: false

    # Zookeeper configuration
    zookeeper:
      replicaCount: 1  # Single node for homelab
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
      persistence:
        data:
          storageClassName: "nvme-storage"
          size: 5Gi
      volumes:
        data:
          storageClassName: "nvme-storage"
          size: 5Gi

      # Disable anti-affinity for single node deployment
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - worker-pi5
        podAntiAffinity: {}

      # Explicitly disable anti-affinity
      antiAffinity: false

    # BookKeeper configuration (storage layer)
    bookkeeper:
      replicaCount: 1  # Single node for homelab
      resources:
        requests:
          memory: 1Gi
          cpu: 500m

      persistence:
        journal:
          storageClassName: "nvme-storage"
          size: 10Gi
        ledgers:
          storageClassName: "nvme-storage"
          size: 20Gi

      volumes:
        journal:
          storageClassName: "nvme-storage"
          size: 10Gi
        ledgers:
          storageClassName: "nvme-storage"
          size: 20Gi

      # Configuration for IoT workload
      configData:
        PULSAR_MEM: "-Xms512m -Xmx1024m -XX:MaxDirectMemorySize=1024m"
        # Optimize for smaller messages (IoT sensors)
        nettyMaxFrameSizeBytes: "5253120"  # 5MB
        journalMaxGroupWaitMSec: "1"  # Low latency

      # Disable anti-affinity for single node deployment
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - worker-pi5
        podAntiAffinity: {}

      # Explicitly disable anti-affinity
      antiAffinity: false

    # Broker configuration (message routing)
    broker:
      replicaCount: 1
      resources:
        requests:
          memory: 1Gi
          cpu: 500m

      configData:
        PULSAR_MEM: "-Xms512m -Xmx1024m -XX:MaxDirectMemorySize=512m"
        # Enable WebSocket for your mobile/web app
        webSocketServiceEnabled: "true"

        # MQTT protocol handler (we'll configure this later)
        messagingProtocols: "mqtt"
        protocolHandlerDirectory: "./protocols"

        # Retention for IoT data (adjust as needed)
        backlogQuotaDefaultLimitGB: "10"
        backlogQuotaDefaultRetentionPolicy: "producer_request_hold"

        # Performance tuning for IoT
        maxMessageSize: "5242880"  # 5MB

      # Disable anti-affinity for single node deployment
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - worker-pi5
        podAntiAffinity: {}

      # Explicitly disable anti-affinity
      antiAffinity: false

    # Proxy configuration (client access point)
    proxy:
      replicaCount: 1
      resources:
        requests:
          memory: 512Mi
          cpu: 250m

      # WebSocket ports for your web/mobile app
      ports:
        http: 8080
        https: 8443
        pulsar: 6650
        pulsarssl: 6651
        # WebSocket ports
        ws: 8000
        wss: 8001

      service:
        type: LoadBalancer  # k3s will use servicelb
        annotations: {}

      configData:
        PULSAR_MEM: "-Xms256m -Xmx512m"
        webSocketServiceEnabled: "true"

      # Disable anti-affinity for single node deployment
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - worker-pi5
        podAntiAffinity: {}

      # Explicitly disable anti-affinity
      antiAffinity: false

    # Monitoring - using existing Prometheus/Grafana
    # CRITICAL: Disable built-in monitoring stack completely
    kube-prometheus-stack:
      enabled: false

    grafana:
      enabled: false

    prometheus:
      enabled: false

    node_exporter:
      enabled: false

    # Disable all monitoring components
    monitoring:
      prometheus: false
      grafana: false
      node_exporter: false
      alert_manager: false

    # Extra components to disable
    extra:
      autoRecovery: true  # We want this for bookkeeper
      bastion: false
      monitoring: false

    pulsar_manager:
      enabled: false